name: Build and Deploy (Nuxt2)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 🧩 リポジトリ取得
      - uses: actions/checkout@v4

      # ⚙️ Node.js 16 を使用（Nuxt2対応）
      - uses: actions/setup-node@v4
        with:
          node-version: 16

      # ⚡️ キャッシュで高速化
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      # 🔐 Secrets から .env を生成
      - name: Create .env file
        run: |
          echo "NUXT_ENV_SPACE_ID=${{ secrets.NUXT_ENV_SPACE_ID }}" >> .env
          echo "NUXT_ENV_CTF_ACCESS_TOKEN=${{ secrets.NUXT_ENV_CTF_ACCESS_TOKEN }}" >> .env
          echo "NUXT_ENV_BASE_URL=${{ secrets.NUXT_ENV_BASE_URL }}" >> .env

      # 🏗️ Nuxt2 ビルド
      - name: Install dependencies and build
        run: |
          yarn install --production
          yarn generate

      # 📦 成果物をアーカイブ
      - name: Archive build files
        run: tar -czf dist.tar.gz ./dist

      # 🚀 Lightsail へデプロイ
      - name: Deploy to AWS Lightsail
        run: |
          echo "${{ secrets.SERVER_KEY }}" > aws_lightsail_key
          chmod 600 aws_lightsail_key
          scp -i aws_lightsail_key -o StrictHostKeyChecking=no dist.tar.gz \
            ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/tmp/
          ssh -i aws_lightsail_key -o StrictHostKeyChecking=no \
            ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} \
            "cd /var/www/html/nislab && rm -rf ./dist && tar -xzf /tmp/dist.tar.gz && mv dist/* . && rm -rf dist /tmp/dist.tar.gz"

      # ✅ 成功通知（Slack）
      - name: Notify Slack (success)
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: good
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: 'app-website-nislab'
          SLACK_USERNAME: 'NISLAB GitHub Actions'
          SLACK_TITLE: "✅ デプロイ成功"
          SLACK_MESSAGE: |
            Nuxt 2 サイトのデプロイが **成功** しました 🎉  
            ブランチ: `${{ github.ref_name }}`  
            コミット: `${{ github.sha }}`  
            実行者: `${{ github.actor }}`  

      # ❌ 失敗通知（Slack）
      - name: Notify Slack (failure)
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: danger
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: 'app-website-nislab'
          SLACK_USERNAME: 'NISLAB GitHub Actions'
          SLACK_TITLE: "❌ デプロイ失敗"
          SLACK_MESSAGE: |
            デプロイが **失敗** しました ⚠️  
            ブランチ: `${{ github.ref_name }}`  
            コミット: `${{ github.sha }}`  
            実行者: `${{ github.actor }}`  
            詳細ログ: [GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
