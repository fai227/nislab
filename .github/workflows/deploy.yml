name: Build and Deploy

on:
  push:
    branches:
      - main
  repository_dispatch:

jobs:
  Build-and-Deploy:
    runs-on: ubuntu-latest

    steps:
      # 🧩 リポジトリ取得
      - uses: actions/checkout@v4

      # ⚙️ Node.js 16 (Nuxt2対応)
      - uses: actions/setup-node@v4
        with:
          node-version: 16

      # ⚡️ Yarn依存関係キャッシュ
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      # 🔐 Secretsから.env生成
      - name: Create .env file
        run: |
          echo "NUXT_ENV_SPACE_ID=${{ secrets.NUXT_ENV_SPACE_ID }}" >> .env
          echo "NUXT_ENV_CTF_ACCESS_TOKEN=${{ secrets.NUXT_ENV_CTF_ACCESS_TOKEN }}" >> .env
          echo "NUXT_ENV_BASE_URL=${{ secrets.NUXT_ENV_BASE_URL }}" >> .env

      # 🏗️ Nuxt 2 ビルド（詳細ログ付き）
      - name: Install dependencies and build
        run: |
          yarn install --production
          yarn generate

      # 📦 成果物をアーカイブ（distの中身だけ）
      - name: Archive build files
        run: tar -czf dist.tar.gz -C dist .

      # 🚀 Lightsailへデプロイ（/var/www/html に直接展開）
      - name: Deploy to AWS Lightsail
        run: |
          echo "${{ secrets.SERVER_KEY }}" > aws_lightsail_key
          chmod 600 aws_lightsail_key
          scp -i aws_lightsail_key -o StrictHostKeyChecking=no dist.tar.gz \
            ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/tmp/
          ssh -i aws_lightsail_key -o StrictHostKeyChecking=no \
            ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} \
            "
            mkdir -p /var/www/html && \
            find /var/www/html -mindepth 1 -delete && \
            tar -xzf /tmp/dist.tar.gz -C /var/www/html && \
            rm /tmp/dist.tar.gz
            "

      # ✅ 成功通知
      - name: Notify Slack (success)
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: good
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: 'app-website-nislab'
          SLACK_ICON: https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2021-07-06/2257469713729_06357f0ef4a522dfb049_72.png
          SLACK_USERNAME: 'NISLAB GitHub Actions'
          SLACK_TITLE: "✅ デプロイ成功"
          SLACK_MESSAGE: |
            NISLAB HPのデプロイが成功しました！
            更新をご確認ください。
            NISLAB HP: https://nislab.doshisha.ac.jp/

      # ❌ 失敗通知
      - name: Notify Slack (failure)
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: danger
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: 'app-website-nislab'
          SLACK_ICON: https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2021-07-06/2257469713729_06357f0ef4a522dfb049_72.png
          SLACK_USERNAME: 'NISLAB GitHub Actions'
          SLACK_TITLE: "❌ デプロイ失敗"
          SLACK_MESSAGE: |
            NISLAB HPのデプロイが失敗しました。
            ログの詳細は上記の「Actions URL」をご確認ください。
            NISLAB HP: https://nislab.doshisha.ac.jp/
